// Function to wait for a specified time
const wait = ms => new Promise(resolve => setTimeout(resolve, ms));

// Function to perform the actions with delays
const executeActions = async () => {
    // Click on the icon with class "icon-k-newrequest"
    document.querySelector('.icon-k-newrequest').click();
    await wait(1000);  // Wait for 1 second

    // Write OrgSet- in the first input field
    const nameInput = document.querySelector('input[name="name"]');
    nameInput.value = 'OrgSet-';
    nameInput.dispatchEvent(new Event('input'));  // Trigger input event to ensure Angular detects the change
    await wait(1000);  // Wait for 1 second

    // Write OrgSet- in the search field
    const searchInput = document.querySelector('input[placeholder="Search..."]');
    searchInput.value = 'OrgSet-';
    searchInput.dispatchEvent(new Event('input'));  // Trigger input event to ensure Angular detects the change
    await wait(1000);  // Wait for 1 second

    // Click the search button
    document.querySelector('button.search-buttons__search').click();
    await wait(1000);  // Wait for 1 second

    // Wait for the search results to appear and select the desired item
    const items = document.querySelectorAll('span[ng-bind-html="writeLabel( item, \'itemLabel\' )"]');
    for (let item of items) {
        if (item.textContent.includes('OrgSet-')) {
            item.click();
            break;
        }
    }
    await wait(1000);  // Wait for 1 second

    // Click on the "Save" button
    const saveButton = Array.from(document.querySelectorAll('span[ng-bind-template="Save"]'))
                            .find(span => span.innerText.includes('Save'));
    if (saveButton) {
        saveButton.click();
    }
};

// Execute the function
executeActions();
